# Generated by Django 4.2.10 on 2025-04-06 14:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('ai', 'AI Assistant'), ('doctor', 'Human Doctor'), ('user', 'Self-Reported'), ('symptom_checker', 'Symptom Checker')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('icd_code', models.CharField(blank=True, help_text='ICD-10 or ICD-11 code', max_length=20)),
                ('confidence', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('confirmed', 'Confirmed')], default='medium', max_length=20)),
                ('diagnosis_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('resolved', 'Resolved'), ('chronic', 'Chronic'), ('ruled_out', 'Ruled Out')], default='active', max_length=20)),
                ('resolved_date', models.DateField(blank=True, null=True)),
                ('related_symptoms', models.JSONField(blank=True, default=list)),
                ('notes', models.TextField(blank=True)),
                ('doctor', models.ForeignKey(blank=True, limit_choices_to={'is_doctor': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_diagnoses', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Diagnoses',
                'ordering': ['-diagnosis_date'],
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('treatment_type', models.CharField(choices=[('medication', 'Medication'), ('procedure', 'Procedure'), ('therapy', 'Therapy'), ('lifestyle', 'Lifestyle Change'), ('monitoring', 'Monitoring'), ('other', 'Other')], max_length=20)),
                ('medication_name', models.CharField(blank=True, max_length=200)),
                ('dosage', models.CharField(blank=True, max_length=100)),
                ('frequency', models.CharField(blank=True, max_length=100)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('completed', 'Completed'), ('discontinued', 'Discontinued')], default='planned', max_length=20)),
                ('instructions', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('precautions', models.TextField(blank=True)),
                ('effectiveness_rating', models.PositiveIntegerField(blank=True, help_text='1-10 rating of effectiveness', null=True)),
                ('adherence_rating', models.PositiveIntegerField(blank=True, help_text='1-10 rating of adherence to treatment', null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='diagnostics.diagnosis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='FollowUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('follow_up_type', models.CharField(choices=[('check_up', 'Check-up'), ('test', 'Medical Test'), ('specialist', 'Specialist Referral'), ('medication_review', 'Medication Review'), ('other', 'Other')], max_length=20)),
                ('recommended_date', models.DateField()),
                ('scheduled_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('recommended', 'Recommended'), ('scheduled', 'Scheduled'), ('completed', 'Completed'), ('missed', 'Missed'), ('cancelled', 'Cancelled')], default='recommended', max_length=20)),
                ('results', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_ups', to='diagnostics.diagnosis')),
                ('treatments', models.ManyToManyField(blank=True, related_name='follow_ups', to='diagnostics.treatment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_ups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['recommended_date'],
            },
        ),
    ]
